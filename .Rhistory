# model for simulating muscle oxygen content depending on activity level (exercise) and heart rate
# model parameters; https://data-flair.training/blogs/r-vector/
# 1 ml O2 is 1.43 mg O2 at Standard Temperature and Pressure
Oblood = 0.2*1.43 # mg O2 (ml blood)-1
f = 0.7  # maximum fraction of oxygen transferred from blood to tissue
b = 0.0357 # ml blood /(beat 100 ml muscle)-1
Odemand = 0.11*1.43 # mg O2 (100 ml muscle minute)-1
Omax = 10 # max oxygen content in mg O2/100ml
timesteps = 120 # run each simulation for 120 timesteps (minutes)
O = numeric(timesteps) # vector for the results of the simulations of muscle oxygen content
O[1] = 5 # initial oxygen content for the models is 5 mg O2/100ml
# multiple model simulations follow to calculate muscle oxygen content
# with different input heart rates and activity levels for 120 minutes each; https://campus.datacamp.com/courses/intermediate-r-for-finance/loops-3?ex=9
# and an initial muscle oxygen content of 5 mg O2
# muscle oxygen content is updated each minute based on previous muscle oxygen content
### 1) simulation of model without homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 65 # 50-200; heart rate beats per minute
Alevel2 = 2.0 # 1 for rest and >2 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of the no homeostasis simulation
# plot the results of each simulation to compare the change in muscle oxygen content over time
# depending on the input heart rate and activity level
# https://www.datacamp.com/community/tutorials/15-questions-about-r-plots
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="No homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 65 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 70 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 90 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 100 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 110 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 120 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 2) simulation of model with homeostasis regulating heart rate
# resting activity level and resting heart rate
Hrate = 65 # 50-200; heart rate beats per minute
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 130 # 50-200; heart rate beats per minute   ENTER CHANGES TO ELEVATED HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with homeostasis simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With homeostasis") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
#### 3) simulation of model with experimental results
# resting activity level and resting heart rate
Hrate = 67 # 50-200; heart rate beats per minute  ENTER YOUR RESTING HEART RATE HERE
Alevel = 1 # 1 for rest and 2.0 for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate*f*b*(1-O[i-1]/Omax)
Outflux = Odemand*Alevel
O[i] = O[i-1]+Influx-Outflux
}
Ostar=(Omax/(Oblood*Hrate*f*b))*(Oblood*Hrate*f*b-Odemand*Alevel)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar,1),"mg O2/(100 ml muscle)."))
# high activity level and resting heart rate
O2 = O #results of the second simulation of muscle oxygen content
Hrate2 = 111 # 50-200; heart rate beats per minute  ENTER YOUR POST EXERCISE HEART RATE HERE
Alevel2 = 2.0 # 1 for rest and 2.0 or greater for exercise; activity level of skeletal muscle
for(i in 2:length(O)){
Influx = Oblood*Hrate2*f*b*(1-O2[i-1]/Omax)
Outflux = Odemand*Alevel2
O2[i] = O2[i-1]+Influx-Outflux
}
Ostar2=(Omax/(Oblood*Hrate2*f*b))*(Oblood*Hrate2*f*b-Odemand*Alevel2)
print(paste("Your estimated equilibrium skeletal muscle oxygen level is:",round(Ostar2,1),"mg O2/(100 ml muscle)."))
# plot results of with experimental data simulation
plot(1:length(O),O, type='l', xlab="Timestep (minute)", ylab="Oxygen Content (mg O2/100ml)", ylim=c(0, 10),main="With experimental data") # first simulation results, line colored black
lines(1:length(O2),O2, col='red') # second simulation results, line colored red
legend("top", bty="n", inset=0, legend=c("Resting", "Active"), col=c("black", "red"), lty=1:1, cex=0.8, horiz = TRUE)
vector<-c(Savannah, Charlotte, Erin, Spencer, Luke)
v<-c(Savannah, Charlotte, Erin, Spencer, Luke)
v<-c("Savannah", Charlotte, Erin, Spencer, Luke)
v<-c("Savannah", "Charlotte", "Erin", "Spencer", "Luke")
v[[3]]
v[[1,2]]
v[3]
v[c(1,2)]
vnames<- c("Savannah", "Charlotte", "Erin", "Spencer", "Luke")
testmatrix <- seq(1,4) nrows=2
testmatrix <- seq(1,4)nrows=2
testmatrix <- matrix(c(1,2,3,4), nrow=2, ncol=2)
view(testmatrix)
testmatrix
letters=c("A","B","C","D")
toSum=c(3,10,4,12,55)
print(toSum)
for (i in 1:length(toSum)){}
output[i]=cumsum(toSum[i])
output = numeric(length = length(toSum))
output[i]=cumsum(toSum[i])
print(output)
for (i in 1:length(toSum)){}
for (i in 1:length(toSum)){output[i]=sum(toSum[1:i])}
print(output)
scores=read.table(UWvMSU_1-22-13.txt, header=TRUE, stringsAsFactors=FALSE)
scores=read.table("UWvMSU_1-22-13.txt", header=TRUE, stringsAsFactors=FALSE)
setwd(/Users/savannahmiracle/Desktop/BioComp_Tutorial10)
setwd(Users/savannahmiracle/Desktop/BioComp_Tutorial10)
setwd("/Users/savannahmiracle/Desktop/BioComp_Tutorial10")
scores=read.table("UWvMSU_1-22-13.txt", header=TRUE, stringsAsFactors=FALSE)
UWscores=matrix(0, nrow=23, ncol=3)
MSUscores=matrix(0, nrow=27, ncol=3)
as.matrix(scores)
as.data.frame(scores)
UWscores <- subset(scores,team=="UW")
MSUscores <- subset(scores, team=="MSU")
UWscores
MSUscores
UWx <- UWscores[,1]
UWx
MSUx <- MSUscores[,1]
MSUx
UWy <- numeric(length(UWscores))
UWy
UWy <- numeric(length(UWx))
UWy
UWunadded <- UWscores[,3]
for (i in 1:length(UWunadded)){
UWy[i]=sum(UWunadded[1:i])
}
UWy
MSUunadded <- MSUscores[,3]
MSUy <- numeric(length(MSUunadded))
for (i in 1:length(MSUunadded)){
MSUy[i]=sum(MSUunadded[1:i])
}
MSUy
#plot scores in line graph
plot(UWx,UWy,type="1")
#plot scores in line graph
plot(UWx,UWy,type="l")
lines(MSUx,MSUy)
#plot scores in line graph
plot(UWx,UWy,type="l", xlab="Time", ylab="Score")
lines(MSUx,MSUy)
#plot scores in line graph
plot(UWx,UWy,type="l", xlab="Time", ylab="Score", col="red")
lines(MSUx,MSUy)
#plot scores in line graph
plot(UWx,UWy,type="l", main="UW vs MSU 1-22-13", xlab="Time", ylab="Score", col="red")
lines(MSUx,MSUy)
possible <- 1:100
possible
num <- sample(possible)
guess <- 0
cat("Guess a number between 1 and 100.\n")
while(guess != num)
else if(guess > num)
while(guess != num)
guess <- readline(prompt = "Guess: ")
